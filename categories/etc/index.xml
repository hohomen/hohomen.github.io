<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>etc on Dony Rose</title>
    <link>/categories/etc/</link>
    <description>Recent content in etc on Dony Rose</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 03 Jun 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/etc/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Contents Summary</title>
      <link>/post/etc_index/</link>
      <pubDate>Mon, 03 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/etc_index/</guid>
      <description>단순한 복붙 No! 이해 한 만큼만 직접 작성한다.  Book Log  스프링 독학을 위한 도서 활용 자바 객체 지향의 원리와 이해  Java    Spring  MVC 설정과 작동 원리 MVC CONTROLLER 스프링 DI(Dependency Injection)
  JavaScript  ajax(jQuery) 정리 및 실전 코드 분석 ajax(XMLHttpRequest) 함수(JavaScript Basic) 객체(JavaScript Basic) 배열(JavaScript Basic) 기본 문법(Javascript Basic) HTML에서 JavaScript Load  CSS  Bootstrap grid system
 CSS 기본 CSS 박스모델   li  a { color: #4374D9; border-bottom: none!</description>
    </item>
    
    <item>
      <title>(ant) build.xml 작성법</title>
      <link>/post/etc_build/</link>
      <pubDate>Sat, 02 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/etc_build/</guid>
      <description>가끔 학습용으로 Ant를 사용해야하는 일이 있다. build.xml 작성법을 익힌다면 해석하는 데에도 무리가 없을 것이다.
지금부터 이 문장을 처음부터 만들어 나가봅시다. &amp;lt;?xml version=&amp;quot;1.0&amp;quot;&amp;gt; &amp;lt;project name=&amp;quot;dms&amp;quot; default=&amp;quot;compile&amp;quot; basedir=&amp;quot;.&amp;quot;&amp;gt; &amp;lt;property name=&amp;quot;build.dir&amp;quot; location=&amp;quot;build&amp;quot;/&amp;gt; &amp;lt;property name=&amp;quot;build.prod.dir&amp;quot; location=&amp;quot;${build.dir}/prod&amp;quot;/&amp;gt; &amp;lt;property name=&amp;quot;build.test.dir&amp;quot; location=&amp;quot;${build.dir}/test&amp;quot;/&amp;gt; &amp;lt;property name=&amp;quot;doc.dir&amp;quot; location=&amp;quot;doc&amp;quot;/&amp;gt; &amp;lt;property name=&amp;quot;index.dir&amp;quot; location=&amp;quot;index&amp;quot;/&amp;gt; &amp;lt;property name=&amp;quot;src.dir&amp;quot; location=&amp;quot;src&amp;quot;/&amp;gt; &amp;lt;property name=&amp;quot;test.dir&amp;quot; location=&amp;quot;test&amp;quot;/&amp;gt; &amp;lt;property name=&amp;quot;vendor.lib.dir&amp;quot; location=&amp;quot;vendor/lib&amp;quot;/&amp;gt; &amp;lt;path id=&amp;quot;project.classpath&amp;quot;&amp;gt; &amp;lt;pathelement location=&amp;quot;${build.prod.dir}&amp;quot; /&amp;gt; &amp;lt;pathelement location=&amp;quot;${build.test.dir}&amp;quot; /&amp;gt; &amp;lt;fileset dir=&amp;quot;${vendor.lib.dir}&amp;quot;&amp;gt; &amp;lt;include name=&amp;quot;*.jar&amp;quot;/&amp;gt; &amp;lt;/fileset&amp;gt; &amp;lt;/path&amp;gt; &amp;lt;target name=&amp;quot;prepare&amp;quot;&amp;gt; &amp;lt;mkdir dir=&amp;quot;${build.prod.dir}&amp;quot; /&amp;gt; &amp;lt;mkdir dir=&amp;quot;${build.</description>
    </item>
    
    <item>
      <title>Git 기초(버전관리)</title>
      <link>/post/etc_git_basic/</link>
      <pubDate>Sun, 03 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/etc_git_basic/</guid>
      <description>아래 내용은 생활코딩 Git(CUI, 윈도우 환경) 강의를 정리한 내용입니다. 강의 내용 요약이므로 복습 용도로 유용합니다. 자세한 설명과 과정은 생활코딩을 참조하길 바랍니다. 
설치, 저장소 생성, 기본 설정Git을 다운 받고 설치한다. https://git-scm.com/ Git Bash(윈도우를 리눅스 명령어로 관리) 파일을 실행한다. 프로젝트 파일을 만듭니다.(나의 pwd는 /c/Users/DongHo/ 이었다.) $mkdir projectN 프로젝트 디렉토리로 들어갑니다. $cd projectN 현재 디렉토리를 git의 (버전) 저장소로 만듭니다. $git init($ls -al을 해보면 파란색 글씨로 .git/(버전관리를 하게되면 여러가지 정보가 저장되는 곳이다.) 폴더가 생성된 것을 확인할 수 있다.</description>
    </item>
    
  </channel>
</rss>